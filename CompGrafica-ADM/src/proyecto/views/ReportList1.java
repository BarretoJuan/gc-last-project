/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.views;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import proyecto.entities.Report;
import proyecto.entities.User;
import proyecto.utils.Colors;
import proyecto.utils.RoundedLineBorder;
import proyecto.utils.SetImageLabel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;
import proyecto.db.Caller;
import proyecto.utils.ReportType;
/**
 *
 * @author juan
 */
public class ReportList1 extends javax.swing.JFrame {
    private User user;
    /**
     * Creates new form ReportGeneration
     */
    public ReportList1(User user) throws SQLException {
        this.user = user;

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        generateReportLabel = new JLabel();
        generateReportLabel2 = new JLabel();
        logOutIconButton = new JButton();
        logOutIcon = new JLabel();
        profileIconButton = new JButton();
        profileIcon = new JLabel();
        logoPicButton = new JButton();
        logoPic = new JLabel();
        creamContainer = new JLabel();
        BlueBackGround = new JPanel();
        waveBg = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Reportes");
        setIconImage(new ImageIcon(getClass().getResource("/resources/icon.png")).getImage());
        setResizable(false);
        setSize(new Dimension(961, 540));
        getContentPane().setLayout(new AbsoluteLayout());

        jScrollPane1.setBackground(Colors.creamWhiteText);
        jScrollPane1.setForeground(Colors.darkBlue);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(Colors.creamWhiteText);
        jTable1.setForeground(Colors.darkBlue);
        jTable1.setModel(new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }}
        );
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addColumn("ID");
        model.addColumn("Fecha de envío");
        model.addColumn("Tipo de reporte");
        model.addColumn("Título del reporte");
        model.addColumn("Estado");
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);

        ArrayList<Report> reports = new Caller().getUserReports();
        for (Report report : reports) {
            String statusStr = null;

            if (report.getStatus() == 1 || report.getStatus() == 0) {

                if(report.getStatus() == 1) {
                    statusStr = "Respondido";
                }
                else if (report.getStatus() == 0){
                    statusStr = "No Respondido";
                }
                model.addRow(new Object[] {report.getId(),report.getTimestamp(), new ReportType().getType(report.getType()), report.getTitle(), statusStr});
            }

        }
        jTable1.setGridColor(Colors.darkBlue);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getTableHeader().setForeground(Colors.darkBlue);
        jTable1.getTableHeader().setBackground(Colors.creamWhiteText);
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane1.getViewport().setBackground(Colors.creamWhiteText);
        jScrollPane1.getViewport().setOpaque(true);

        getContentPane().add(jScrollPane1, new AbsoluteConstraints(260, 230, -1, 170));

        generateReportLabel.setFont(new Font("Arial", 1, 24)); // NOI18N
        generateReportLabel.setForeground(Colors.darkBlue);
        generateReportLabel.setText("Seleccione un reporte para ver sus detalles");
        getContentPane().add(generateReportLabel, new AbsoluteConstraints(230, 180, -1, -1));

        generateReportLabel2.setFont(new Font("Arial", 1, 24)); // NOI18N
        generateReportLabel2.setForeground(Colors.darkBlue);
        generateReportLabel2.setText("Tus Reportes");
        getContentPane().add(generateReportLabel2, new AbsoluteConstraints(400, 149, -1, 20));

        logOutIconButton.setBorderPainted(false);
        logOutIconButton.setContentAreaFilled(false);
        logOutIconButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        logOutIconButton.setFocusable(false);
        logOutIconButton.setPreferredSize(new Dimension(70, 84));
        logOutIconButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                logOutIconButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logOutIconButton, new AbsoluteConstraints(830, 20, -1, -1));

        logOutIcon.setPreferredSize(new Dimension(70, 84));
        logOutIcon.setSize(70,84);
        new SetImageLabel().SetImage(logOutIcon, "/resources/LogOut.png");
        getContentPane().add(logOutIcon, new AbsoluteConstraints(830, 20, -1, -1));

        profileIconButton.setBorderPainted(false);
        profileIconButton.setContentAreaFilled(false);
        profileIconButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        profileIconButton.setFocusable(false);
        profileIconButton.setPreferredSize(new Dimension(70, 84));
        profileIconButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                profileIconButtonActionPerformed(evt);
            }
        });
        getContentPane().add(profileIconButton, new AbsoluteConstraints(730, 20, -1, -1));

        profileIcon.setPreferredSize(new Dimension(70, 84));
        profileIcon.setSize(70,84);
        new SetImageLabel().SetImage(profileIcon, "/resources/EditProfile.png");
        getContentPane().add(profileIcon, new AbsoluteConstraints(730, 20, -1, -1));

        logoPicButton.setBackground(new Color(255, 153, 0, 0));
        logoPicButton.setBorderPainted(false);
        logoPicButton.setContentAreaFilled(false);
        logoPicButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        logoPicButton.setFocusable(false);
        logoPicButton.setPreferredSize(new Dimension(375, 130));
        logoPicButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                logoPicButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logoPicButton, new AbsoluteConstraints(40, 0, -1, -1));

        logoPic.setPreferredSize(new Dimension(375, 130));
        logoPic.setSize(375, 130);
        new SetImageLabel().SetImage(logoPic, "/resources/Logo3.png");
        getContentPane().add(logoPic, new AbsoluteConstraints(40, 0, -1, -1));

        creamContainer.setBackground(Colors.creamWhite);
        creamContainer.setBorder(new RoundedLineBorder(Colors.creamWhite, 1, 50, true));
        creamContainer.setPreferredSize(new Dimension(884, 346));
        getContentPane().add(creamContainer, new AbsoluteConstraints(37, 135, -1, -1));

        BlueBackGround.setBackground(Colors.darkBlue);
        BlueBackGround.setPreferredSize(new Dimension(961, 540));

        waveBg.setPreferredSize(new Dimension(961, 540));
        waveBg.setSize(new Dimension(961,540));
        new SetImageLabel().SetImage(waveBg, "/resources/BgBig.png");

        GroupLayout BlueBackGroundLayout = new GroupLayout(BlueBackGround);
        BlueBackGround.setLayout(BlueBackGroundLayout);
        BlueBackGroundLayout.setHorizontalGroup(BlueBackGroundLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(BlueBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(waveBg, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BlueBackGroundLayout.setVerticalGroup(BlueBackGroundLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(BlueBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(waveBg, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(BlueBackGround, new AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoPicButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_logoPicButtonActionPerformed
        this.dispose();
        try {
            new WelcomeView(user).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ReportList1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_logoPicButtonActionPerformed

    private void profileIconButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_profileIconButtonActionPerformed
        dispose();
        try {
            new EditProfile(user).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_profileIconButtonActionPerformed

    private void logOutIconButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_logOutIconButtonActionPerformed
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logOutIconButtonActionPerformed

    private void jTable1MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Object id = jTable1.getValueAt(jTable1.getSelectedRow(),0);
        String idStr = id.toString();
        int intId = Integer.parseInt(idStr);
        dispose();
        new DetailedReportView(intId, user).setVisible(true);
        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JPanel BlueBackGround;
    public JLabel creamContainer;
    public JLabel generateReportLabel;
    public JLabel generateReportLabel2;
    public JScrollPane jScrollPane1;
    public JTable jTable1;
    public JLabel logOutIcon;
    public JButton logOutIconButton;
    public JLabel logoPic;
    public JButton logoPicButton;
    public JLabel profileIcon;
    public JButton profileIconButton;
    public JLabel waveBg;
    // End of variables declaration//GEN-END:variables
}
